library(ggplot2)
library(sf)
library(venn)
library(cowplot)
library(ggVennDiagram)
data_ERR <- read.table("../A_Datas/ERR_POS_all.txt", header = TRUE, sep = "\t")
data_ALL <- read.table("../A_Datas/ALL_POS_all.txt", header = TRUE, sep = "\t")
x_ERR <- list(
AF = data_ERR$ID_POS[data_ERR$Flag_AF == "True"],
SB = data_ERR$ID_POS[data_ERR$Flag_SB == "True"],
COV = data_ERR$ID_POS[data_ERR$Flag_COV == "True"]
)
x_ALL <- list(
AF = data_ALL$ID_POS[data_ALL$Flag_AF == "True"],
SB = data_ALL$ID_POS[data_ALL$Flag_SB == "True"],
COV = data_ALL$ID_POS[data_ALL$Flag_COV == "True"]
)
x_ERR_F <- list(
AF = data_ERR$ID_POS[data_ERR$Flag_AF == "False"],
SB = data_ERR$ID_POS[data_ERR$Flag_SB == "False"],
COV = data_ERR$ID_POS[data_ERR$Flag_COV == "False"]
)
x_ALL_F <- list(
AF = data_ALL$ID_POS[data_ALL$Flag_AF == "False"],
SB = data_ALL$ID_POS[data_ALL$Flag_SB == "False"],
COV = data_ALL$ID_POS[data_ALL$Flag_COV == "False"]
)
combined_list <- c(x_ERR, x_ALL)
data_err <- process_data(Venn(x_ERR))
data_all <- process_data(Venn(x_ALL))
data_err_F <- process_data(Venn(x_ERR_F))
data_all_F <- process_data(Venn(x_ALL_F))
data_ALL$Flag_AF <- as.logical(data_ALL$Flag_AF)
data_ALL$Flag_SB <- as.logical(data_ALL$Flag_SB)
data_ALL$Flag_COV <- as.logical(data_ALL$Flag_COV)
data_ERR$Flag_AF <- as.logical(data_ERR$Flag_AF)
data_ERR$Flag_SB <- as.logical(data_ERR$Flag_SB)
data_ERR$Flag_COV <- as.logical(data_ERR$Flag_COV)
data_ERR_F_count <- sum(!data_ERR$Flag_AF & !data_ERR$Flag_SB & !data_ERR$Flag_COV)
data_ALL_F_count <- sum(!data_ALL$Flag_AF & !data_ALL$Flag_SB & !data_ALL$Flag_COV)
data_ERR_count <- sum(data_ERR$Flag_AF & data_ERR$Flag_SB & data_ERR$Flag_COV)
data_ALL_count <- sum(data_ALL$Flag_AF & data_ALL$Flag_SB & data_ALL$Flag_COV)
# 自定义颜色
manual_colors <- c("AF" = "orange", "SB" = "steelblue", "COV" = "red")
# 绘制第一个图形
p1 <- ggplot() +
# 1. region count layer
geom_sf(aes(fill = count), data = venn_region(data_err)) +
# 2. set edge layer
geom_sf(aes(color = name), data = venn_setedge(data_err), show.legend = FALSE, size = 2) +
# 3. set label layer
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_err)) +
# 4. region label layer
geom_sf_label(aes(label = paste0(count, " (", round(count/nrow(data_ERR)*100, 3), "%)")),
data = venn_region(data_err),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "Error positions (Passed the threshold)",
# subtitle = "blank for now",
# caption = Sys.Date()
)+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),   # 给图加一个边框
panel.background = element_rect(fill = "#EBF6FD")) +
annotate(geom = 'text', label = paste0(data_ERR_F_count, " (", round(data_ERR_F_count/nrow(data_ERR)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1.4, vjust = 1.5, size = 5)
# 绘制第二个图形
p2 <- ggplot() +
# 1. region count layer
geom_sf(aes(fill = count), data = venn_region(data_all)) +
# 2. set edge layer
geom_sf(aes(color = name), data = venn_setedge(data_all), show.legend = FALSE, size = 2) +
# 3. set label layer
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_all)) +
# 4. region label layer
geom_sf_label(aes(label = paste0(count, " (", round(count/nrow(data_ALL)*100, 3), "%)")),
data = venn_region(data_all),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "All positions (Passed the threshold)",
#subtitle = "blank for now",
#caption = Sys.Date()
)+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),   # 给图加一个边框
panel.background = element_rect(fill = "#6FBEF7")) +
annotate(geom = 'text', label = paste0(data_ALL_F_count, " (", round(data_ALL_F_count/nrow(data_ALL)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1.05, vjust = 1.5, size = 5)
# 绘制第一个图形
p3 <- ggplot() +
# 1. region count layer
geom_sf(aes(fill = count), data = venn_region(data_err_F)) +
# 2. set edge layer
geom_sf(aes(color = name), data = venn_setedge(data_err_F), show.legend = FALSE, size = 2) +
# 3. set label layer
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_err_F)) +
# 4. region label layer
geom_sf_label(aes(label = paste0(count, " (", round(count/nrow(data_ERR)*100, 3), "%)")),
data = venn_region(data_err_F),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "Error positions (Unpassed the threshold)",
# subtitle = "blank for now",
# caption = Sys.Date()
)+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),   # 给图加一个边框
panel.background = element_rect(fill = "#EBF6FD")) +
annotate(geom = 'text', label = paste0(data_ERR_count, " (", round(data_ERR_count/nrow(data_ERR)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1.55, vjust = 1.5, size = 5)
# 绘制第二个图形
p4 <- ggplot() +
# 1. region count layer
geom_sf(aes(fill = count), data = venn_region(data_all_F)) +
# 2. set edge layer
geom_sf(aes(color = name), data = venn_setedge(data_all_F), show.legend = FALSE, size = 2) +
# 3. set label layer
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_all_F)) +
# 4. region label layer
geom_sf_label(aes(label = paste0(count, " (", round(count/nrow(data_ALL)*100, 3), "%)")),
data = venn_region(data_all_F),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "All positions (Unpassed the threshold)",
#subtitle = "blank for now",
#caption = Sys.Date()
)+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),   # 给图加一个边框
panel.background = element_rect(fill = "#F4FAFE")) +
annotate(geom = 'text', label = paste0(data_ALL_count, " (", round(data_ALL_count/nrow(data_ALL)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1.8, vjust = 1.5, size = 5)
# 创建标题
title <- ggdraw() + draw_label("Venn diagram of the indicator comparison")
# 在一个2 x 2的画布上显示四个图形
combined_plot <- plot_grid(p1, p2, p3, p4, nrow = 2, ncol = 2)
# 添加共享图例
legend <- cowplot::get_legend(
ggplot() +
geom_sf(aes(color = name), data = venn_setedge(data_all), show.legend = TRUE, size = 2) +
scale_color_manual(values = manual_colors) +
theme_void() +
labs(color = "Category") +
theme(legend.direction = "horizontal")
)
# 将图形和图例组合在一起
final_plot <- plot_grid(
title,
combined_plot,
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
# 显示最终的图形
print(final_plot)
print(final_plot)
