# 自定义颜色
manual_colors <- c("AF" = "#6488AE", "SB" =  "#D9BFCB", "COV" = "#A3AC5D")
# 创建标题
title <- ggdraw() + draw_label("Same nucleotide")
# 创建共享图例
legend <- cowplot::get_legend(
ggplot() +
geom_sf(aes(color = name), data = venn_setedge(Err_same), show.legend = TRUE, size = 10, lwd = 1.5) +
scale_color_manual(values = manual_colors) +
theme_void() +
labs(color = "Category") +
theme(legend.direction = "horizontal")
)
# 绘制图形并将图形和图例组合在一起
final_plot <- plot_grid(
title,
ggplot() +
geom_sf(aes(fill = count), data = venn_region(Err_same)) +
geom_sf(aes(color = name), data = venn_setedge(Err_same), show.legend = FALSE, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(Err_same)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/NB_all*100, 3), "%)")),
data = venn_region(Err_same),
size = 5) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.01, 0.04, 0.08, 0.1, 0.3, 0.5, 0.7, 0.8, 0.9, 1), limits = c(0, 3400000000), guide = "none")+
scale_color_manual(values = manual_colors)+
theme(panel.border = element_rect(colour = "white", fill=NA, size=1.5),   # 给图加一个边框
panel.background = element_rect(fill = "#6FBEF7")),
# annotate(geom = 'text', label = paste0(data_ERR_count_F, " (", round(data_ERR_count_F/nrow(data_ERR_same)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1.2, vjust = 1.5, size = 5),
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
# 显示最终的图形
print(final_plot)
print(final_plot)
# 自定义颜色
manual_colors <- c("AF" = "#6488AE", "SB" =  "#D9BFCB", "COV" = "#A3AC5D")
# 创建标题
title <- ggdraw() + draw_label("Same nucleotide")
# 创建共享图例
legend <- cowplot::get_legend(
ggplot() +
geom_sf(aes(color = name), data = venn_setedge(Err_same), show.legend = TRUE, size = 10, lwd = 1.5) +
scale_color_manual(values = manual_colors) +
theme_void() +
labs(color = "Category") +
theme(legend.direction = "horizontal")
)
# 绘制图形并将图形和图例组合在一起
final_plot <- plot_grid(
title,
ggplot() +
geom_sf(aes(fill = round(count/NB_all*100, 3)), data = venn_region(Err_same)) +
geom_sf(aes(color = name), data = venn_setedge(Err_same), show.legend = FALSE, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(Err_same)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/NB_all*100, 3), "%)")),
data = venn_region(Err_same),
size = 5) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 100), guide = "none")+
scale_color_manual(values = manual_colors)+
theme(panel.border = element_rect(colour = "white", fill=NA, size=1.5),   # 给图加一个边框
panel.background = element_rect(fill = "#6FBEF7")),
# annotate(geom = 'text', label = paste0(data_ERR_count_F, " (", round(data_ERR_count_F/nrow(data_ERR_same)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1.2, vjust = 1.5, size = 5),
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
# 显示最终的图形
print(final_plot)
print(final_plot)
# 自定义颜色
manual_colors <- c("AF" = "#6488AE", "SB" =  "#D9BFCB", "COV" = "#A3AC5D")
# 创建标题
title <- ggdraw() + draw_label("Same nucleotide")
# 创建共享图例
legend <- cowplot::get_legend(
ggplot() +
geom_sf(aes(color = name), data = venn_setedge(Err_same), show.legend = TRUE, size = 10, lwd = 1.5) +
scale_color_manual(values = manual_colors) +
theme_void() +
labs(color = "Category") +
theme(legend.direction = "horizontal")
)
# 绘制图形并将图形和图例组合在一起
final_plot <- plot_grid(
title,
ggplot() +
geom_sf(aes(fill = round(count/NB_all*100, 3)), data = venn_region(Err_same)) +
geom_sf(aes(color = name), data = venn_setedge(Err_same), show.legend = FALSE, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(Err_same)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/NB_all*100, 3), "%)")),
data = venn_region(Err_same),
size = 5) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#E2F3FC","#D9EFFB","#ACDEF6","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9), limits = c(0, 100), guide = "none")+
scale_color_manual(values = manual_colors)+
theme(panel.border = element_rect(colour = "white", fill=NA, size=1.5),   # 给图加一个边框
panel.background = element_rect(fill = "#6FBEF7")),
# annotate(geom = 'text', label = paste0(data_ERR_count_F, " (", round(data_ERR_count_F/nrow(data_ERR_same)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1.2, vjust = 1.5, size = 5),
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
# 显示最终的图形
print(final_plot)
print(final_plot)
AF <- 24739
SB <- 341
COV <- 2021
AF_SB <- 77001
AF_COV <- 1713
SB_COV <- 166
ALL <- 9363
ALL_UN <- 4839
NB_all <- AF+SB+COV+AF_SB+AF_COV+SB_COV+ALL+ALL_UN
Err_diff@region[["count"]][1] <- AF
Err_diff@region[["count"]][2] <- SB
Err_diff@region[["count"]][3] <- COV
Err_diff@region[["count"]][4] <- AF_SB
Err_diff@region[["count"]][5] <- AF_COV
Err_diff@region[["count"]][6] <- SB_COV
Err_diff@region[["count"]][7] <- ALL
# 自定义颜色
manual_colors <- c("AF" = "#6488AE", "SB" =  "#D9BFCB", "COV" = "#A3AC5D")
# 创建标题
title <- ggdraw() + draw_label("Different nucleotide")
# 创建共享图例
legend <- cowplot::get_legend(
ggplot() +
geom_sf(aes(color = name), data = venn_setedge(Err_diff), show.legend = TRUE, size = 10, lwd = 1.5) +
scale_color_manual(values = manual_colors) +
theme_void() +
labs(color = "Category") +
theme(legend.direction = "horizontal")
)
# 绘制图形并将图形和图例组合在一起
final_plot <- plot_grid(
title,
ggplot() +
geom_sf(aes(fill = round(count/NB_all*100, 3)), data = venn_region(Err_diff)) +
geom_sf(aes(color = name), data = venn_setedge(Err_diff), show.legend = FALSE, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(Err_diff)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/NB_all*100, 3), "%)")),
data = venn_region(Err_diff),
size = 5) +  theme_void()+
scale_fill_gradientn(colors = c('#F4FAF9',
'#E8F4F2',
'#D1E9E4',
'#BADED7',
'#A3D3CB',
'#8CB9BE',
'#75AEB2',
'#5E94A5',
'#478A99',
'#49998B'),
values = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9), limits = c(0, 100), guide = "none")+
scale_color_manual(values = manual_colors)+
theme(panel.border = element_rect(colour = "white", fill=NA, size=1.5),   # 给图加一个边框
panel.background = element_rect(fill = '#F4FAF9')) ,
#annotate(geom = 'text', label = paste0(data_ERR_count_F, " (", round(data_ERR_count_F/nrow(data_ERR_same)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1.2, vjust = 1.5, size = 5),
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
# 显示最终的图形
print(final_plot)
print(final_plot)
AF <- 223475
SB <- 5520
COV <- 75904068
AF_SB <- 69090
AF_COV <- 66826
SB_COV <- 40259
ALL <- 49100
ALL_UN <- 16217155
NB_all <- AF+SB+COV+AF_SB+AF_COV+SB_COV+ALL+ALL_UN
Err_masked@region[["count"]][1] <- AF
Err_masked@region[["count"]][2] <- SB
Err_masked@region[["count"]][3] <- COV
Err_masked@region[["count"]][4] <- AF_SB
Err_masked@region[["count"]][5] <- AF_COV
Err_masked@region[["count"]][6] <- SB_COV
Err_masked@region[["count"]][7] <- ALL
# 自定义颜色
manual_colors <- c("AF" = "#6488AE", "SB" =  "#D9BFCB", "COV" = "#A3AC5D")
# 创建标题
title <- ggdraw() + draw_label("Viridian assembly masked")
# 创建共享图例
legend <- cowplot::get_legend(
ggplot() +
geom_sf(aes(color = name), data = venn_setedge(Err_masked), show.legend = TRUE, size = 10, lwd = 1.5) +
scale_color_manual(values = manual_colors) +
theme_void() +
labs(color = "Category") +
theme(legend.direction = "horizontal")
)
# 绘制图形并将图形和图例组合在一起
final_plot <- plot_grid(
title,
ggplot() +
geom_sf(aes(fill = round(count/NB_all*100, 3)), data = venn_region(Err_masked)) +
geom_sf(aes(color = name), data = venn_setedge(Err_masked), show.legend = FALSE, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(Err_masked)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/NB_all*100, 3), "%)")),
data = venn_region(Err_masked),
size = 5) +  theme_void()+
scale_fill_gradientn(colors = c('#FDFDFD',
'#F8F3FF',
'#F2E9FF',
'#EDE4F6',
'#E5D8F1',
'#DCCBEA',
'#D7C6E5',
'#C5B5DD',
'#BDADE2',
'#C1BEE3'),
values = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9), limits = c(0, 100), guide = "none")+
scale_color_manual(values = manual_colors)+
theme(panel.border = element_rect(colour = "white", fill=NA, size=1.5),   # 给图加一个边框
panel.background = element_rect(fill = '#F8F3FF')),
#annotate(geom = 'text', label = paste0(data_ERR_count_F, " (", round(data_ERR_count_F/nrow(data_ERR_same)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1.2, vjust = 1.5, size = 5),
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
# 显示最终的图形
print(final_plot)
print(final_plot)
AF <- 15914808
SB <- 10584406
COV <- 320151144
AF_SB <- 26725181
AF_COV <- 1021777
SB_COV <- 141549
ALL <- 367633
ALL_UN <-3377979636
NB_all <- AF+SB+COV+AF_SB+AF_COV+SB_COV+ALL+ALL_UN
Err_same@region[["count"]][1] <- AF
Err_same@region[["count"]][2] <- SB
Err_same@region[["count"]][3] <- COV
Err_same@region[["count"]][4] <- AF_SB
Err_same@region[["count"]][5] <- AF_COV
Err_same@region[["count"]][6] <- SB_COV
Err_same@region[["count"]][7] <- ALL
# 自定义颜色
manual_colors <- c("AF" = "#6488AE", "SB" =  "#D9BFCB", "COV" = "#A3AC5D")
# 创建标题
title <- ggdraw() + draw_label("Same nucleotide")
# 创建共享图例
legend <- cowplot::get_legend(
ggplot() +
geom_sf(aes(color = name), data = venn_setedge(Err_same), show.legend = TRUE, size = 10, lwd = 1.5) +
scale_color_manual(values = manual_colors) +
theme_void() +
labs(color = "Category") +
theme(legend.direction = "horizontal")
)
# 绘制图形并将图形和图例组合在一起
final_plot <- plot_grid(
title,
ggplot() +
geom_sf(aes(fill = round(count/NB_all*100, 3)), data = venn_region(Err_same)) +
geom_sf(aes(color = name), data = venn_setedge(Err_same), show.legend = FALSE, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(Err_same)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/NB_all*100, 3), "%)")),
data = venn_region(Err_same),
size = 5) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#E2F3FC","#D9EFFB","#ACDEF6","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9), limits = c(0, 100), guide = "none")+
scale_color_manual(values = manual_colors)+
theme(panel.border = element_rect(colour = "white", fill=NA, size=1.5),   # 给图加一个边框
panel.background = element_rect(fill = "#6FBEF7")),
# annotate(geom = 'text', label = paste0(data_ERR_count_F, " (", round(data_ERR_count_F/nrow(data_ERR_same)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1.2, vjust = 1.5, size = 5),
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
# 显示最终的图形
print(final_plot)
library(ggplot2)
library(sf)
library(venn)
library(cowplot)
library(ggVennDiagram)
data_ERR <- read.table("../../A_Datas/ERR_POS_all.txt", header = TRUE, sep = "\t")
x_ERR <- list(
AF = data_ERR$ID_POS[data_ERR$Flag_AF == "True"],
SB = data_ERR$ID_POS[data_ERR$Flag_SB == "True"],
COV = data_ERR$ID_POS[data_ERR$Flag_COV == "True"]
)
x_ERR_F <- list(
AF = data_ERR$ID_POS[data_ERR$Flag_AF == "False"],
SB = data_ERR$ID_POS[data_ERR$Flag_SB == "False"],
COV = data_ERR$ID_POS[data_ERR$Flag_COV == "False"]
)
format_count <- function(count) {
result <- ifelse(count >= 1e9, paste0(round(count / 1e9, 2), "B"),
ifelse(count >= 1e6, paste0(round(count / 1e6, 2), "M"),
ifelse(count >= 1e3, paste0(round(count / 1e3, 2), "K"),
as.character(count))))
return(result)
}
data_err <- process_data(Venn(x_ERR))
data_err_F <- process_data(Venn(x_ERR_F))
data_ERR$Flag_AF <- as.logical(data_ERR$Flag_AF)
data_ERR$Flag_SB <- as.logical(data_ERR$Flag_SB)
data_ERR$Flag_COV <- as.logical(data_ERR$Flag_COV)
data_ERR_F_count <- sum(!data_ERR$Flag_AF & !data_ERR$Flag_SB & !data_ERR$Flag_COV)
data_ERR_count <- sum(data_ERR$Flag_AF & data_ERR$Flag_SB & data_ERR$Flag_COV)
AF <- 15914808
SB <- 10584406
COV <- 320151144
AF_SB <- 26725181
AF_COV <- 1021777
SB_COV <- 141549
ALL <- 367633
ALL_UN <-3377979636
NB_all <- AF+SB+COV+AF_SB+AF_COV+SB_COV+ALL+ALL_UN
data_err@region[["count"]][1] <- AF
data_err@region[["count"]][2] <- SB
data_err@region[["count"]][3] <- COV
data_err@region[["count"]][4] <- AF_SB
data_err@region[["count"]][5] <- AF_COV
data_err@region[["count"]][6] <- SB_COV
data_err@region[["count"]][7] <- ALL
manual_colors <- c("AF" = "#6488AE", "SB" =  "#D9BFCB", "COV" = "#A3AC5D")
final_plot <- plot_grid(
title,
ggplot() +
geom_sf(aes(fill = round(count/nrow(data_ERR)*100, 3)), data = venn_region(data_err)) +
geom_sf(aes(color = name), data = venn_setedge(data_err), show.legend = FALSE, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_err)) +
# geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/(total_sum+data_ERR_count_F)*100, 3), "%)")),
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/nrow(data_ERR)*100, 3), "%)")),
data = venn_region(data_err),
size = 5) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#E2F3FC","#D9EFFB","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 100), guide = "none")+
scale_color_manual(values = manual_colors)+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#F4FAFE")),#+
#annotate(geom = 'text', label = paste0(format_count(data_ERR_F_count), " (", round(data_ERR_F_count/nrow(data_ERR)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -0.8, vjust = 1, size = 5),
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
print(final_plot)
print(final_plot)
manual_colors <- c("AF" = "#6488AE", "SB" =  "#D9BFCB", "COV" = "#A3AC5D")
final_plot <- plot_grid(
title,
ggplot() +
geom_sf(aes(fill = round(count/NB_all*100, 3)), data = venn_region(data_err)) +
geom_sf(aes(color = name), data = venn_setedge(data_err), show.legend = FALSE, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_err)) +
# geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/(total_sum+data_ERR_count_F)*100, 3), "%)")),
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/NB_all*100, 3), "%)")),
data = venn_region(data_err),
size = 5) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#E2F3FC","#D9EFFB","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 100), guide = "none")+
scale_color_manual(values = manual_colors)+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#F4FAFE")),#+
#annotate(geom = 'text', label = paste0(format_count(data_ERR_F_count), " (", round(data_ERR_F_count/nrow(data_ERR)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -0.8, vjust = 1, size = 5),
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
print(final_plot)
print(final_plot)
manual_colors <- c("AF" = "#6488AE", "SB" =  "#D9BFCB", "COV" = "#A3AC5D")
final_plot <- plot_grid(
title,
ggplot() +
geom_sf(aes(fill = round(count/NB_all*100, 3)), data = venn_region(data_err)) +
geom_sf(aes(color = name), data = venn_setedge(data_err), show.legend = FALSE, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_err)) +
# geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/(total_sum+data_ERR_count_F)*100, 3), "%)")),
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/NB_all*100, 3), "%)")),
data = venn_region(data_err),
size = 5) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#E2F3FC","#D9EFFB","#ACDEF6","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9), limits = c(0, 100), guide = "none")+
scale_color_manual(values = manual_colors)+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#F4FAFE")),#+
#annotate(geom = 'text', label = paste0(format_count(data_ERR_F_count), " (", round(data_ERR_F_count/nrow(data_ERR)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -0.8, vjust = 1, size = 5),
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
print(final_plot)
print(final_plot)
manual_colors <- c("AF" = "#6488AE", "SB" =  "#D9BFCB", "COV" = "#A3AC5D")
# 创建标题
title <- ggdraw() + draw_label("All positions (Passed the threshold)")
final_plot <- plot_grid(
title,
ggplot() +
geom_sf(aes(fill = round(count/NB_all*100, 3)), data = venn_region(data_err)) +
geom_sf(aes(color = name), data = venn_setedge(data_err), show.legend = FALSE, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_err)) +
# geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/(total_sum+data_ERR_count_F)*100, 3), "%)")),
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/NB_all*100, 3), "%)")),
data = venn_region(data_err),
size = 5) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#E2F3FC","#D9EFFB","#ACDEF6","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9), limits = c(0, 100), guide = "none")+
scale_color_manual(values = manual_colors)+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#F4FAFE")),#+
#annotate(geom = 'text', label = paste0(format_count(data_ERR_F_count), " (", round(data_ERR_F_count/nrow(data_ERR)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -0.8, vjust = 1, size = 5),
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
print(final_plot)
print(final_plot)
AF <- 7547094
SB <- 1782985
COV <- 583535685
AF_SB <- 17971522
AF_COV <- 954583
SB_COV <- 253433
ALL <- 377289
ALL_UN <-3420841838
NB_all <- AF+SB+COV+AF_SB+AF_COV+SB_COV+ALL+ALL_UN
data_err@region[["count"]][1] <- AF
data_err@region[["count"]][2] <- SB
data_err@region[["count"]][3] <- COV
data_err@region[["count"]][4] <- AF_SB
data_err@region[["count"]][5] <- AF_COV
data_err@region[["count"]][6] <- SB_COV
data_err@region[["count"]][7] <- ALL
manual_colors <- c("AF" = "#6488AE", "SB" =  "#D9BFCB", "COV" = "#A3AC5D")
# 创建标题
title <- ggdraw() + draw_label("All positions (Passed the threshold)")
final_plot <- plot_grid(
title,
ggplot() +
geom_sf(aes(fill = round(count/NB_all*100, 3)), data = venn_region(data_err)) +
geom_sf(aes(color = name), data = venn_setedge(data_err), show.legend = FALSE, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_err)) +
# geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/(total_sum+data_ERR_count_F)*100, 3), "%)")),
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/NB_all*100, 3), "%)")),
data = venn_region(data_err),
size = 5) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#E2F3FC","#D9EFFB","#ACDEF6","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9), limits = c(0, 100), guide = "none")+
scale_color_manual(values = manual_colors)+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#F4FAFE")),#+
#annotate(geom = 'text', label = paste0(format_count(data_ERR_F_count), " (", round(data_ERR_F_count/nrow(data_ERR)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -0.8, vjust = 1, size = 5),
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
print(final_plot)
print(final_plot)
format_count(ALL_UN)
manual_colors <- c("AF" = "#6488AE", "SB" =  "#D9BFCB", "COV" = "#A3AC5D")
# 创建标题
title <- ggdraw() + draw_label("All positions (Passed the threshold)")
final_plot <- plot_grid(
title,
ggplot() +
geom_sf(aes(fill = round(count/NB_all*100, 3)), data = venn_region(data_err)) +
geom_sf(aes(color = name), data = venn_setedge(data_err), show.legend = FALSE, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_err)) +
# geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/(total_sum+data_ERR_count_F)*100, 3), "%)")),
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/NB_all*100, 3), "%)")),
data = venn_region(data_err),
size = 5) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#E2F3FC","#D9EFFB","#ACDEF6","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9), limits = c(0, 100), guide = "none")+
scale_color_manual(values = manual_colors)+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#499DF5")),#+
#annotate(geom = 'text', label = paste0(format_count(data_ERR_F_count), " (", round(data_ERR_F_count/nrow(data_ERR)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -0.8, vjust = 1, size = 5),
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
print(final_plot)
print(final_plot)
