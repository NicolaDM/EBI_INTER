data = venn_region(data),
size = 3) +
scale_fill_gradient(low = "#F4FAFE", high = "skyblue")+
scale_color_manual(values = c("AF" = "yellow","SB" ="steelblue",'COV' = 'red'))+
theme_void()+
labs(title = "Error position's Venn Diagram",
subtitle = "blank for now",
caption = Sys.Date())
# Second plot: UpSetR plot
x <- list(
AF = data_ERR_AF$Position[data_ERR_AF$Flag == "True"],
SB = data_ERR_SB$Position[data_ERR_SB$Flag == "True"],
COV = data_ERR_COV$Position[data_ERR_COV$Flag == "True"]
)
upset_plot <- upset(fromList(x), sets.bar.color = "#56B4E9", order.by = "freq", empty.intersections = "on",
set_size.show = T,
sets.x.label = "Set Size",
mainbar.y.label = "Intersection Size",
mb.ratio = c(0.55, 0.45))
# Combine the two plots
(venn_plot | upset_plot) / plot_layout(ncol = 2, widths = c(2, 1))
library(patchwork)
library(ggplot2)
library(ggVennDiagram)
library(UpSetR)
# First plot: Venn diagram
x <- list(
AF = data_ERR_AF$Position[data_ERR_AF$Flag == "True"],
SB = data_ERR_SB$Position[data_ERR_SB$Flag == "True"],
COV = data_ERR_COV$Position[data_ERR_COV$Flag == "True"]
)
venn <- Venn(x)
data <- process_data(venn)
venn_plot <- ggplot() +
# 1. region count layer
geom_sf(aes(fill = count), data = venn_region(data)) +
# 2. set edge layer
geom_sf(aes(color = name), data = venn_setedge(data), show.legend = TRUE, size = 2) +
# 3. set label layer
geom_sf_text(aes(label = name), data = venn_setlabel(data)) +
# 4. region label layer
geom_sf_label(aes(label = paste0(count, " (", scales::percent(count/sum(count), accuracy = 2), ")")),
data = venn_region(data),
size = 3) +
scale_fill_gradient(low = "#F4FAFE", high = "skyblue")+
scale_color_manual(values = c("AF" = "yellow","SB" ="steelblue",'COV' = 'red'))+
theme_void()+
labs(title = "Error position's Venn Diagram",
subtitle = "blank for now",
caption = Sys.Date())
upset_plot <- upset(fromList(x), sets.bar.color = "#56B4E9", order.by = "freq", empty.intersections = "on",
set_size.show = T,
sets.x.label = "Set Size",
mainbar.y.label = "Intersection Size",
mb.ratio = c(0.55, 0.45))
# Combine the two plots
(venn_plot | upset_plot) / plot_layout(ncol = 2, widths = c(2, 1))
library(VennDiagram)
#创建一个列表，包含要显示在venn pie图中的数据
#指定颜色
list_col <- c("red", "blue", "green")
#创建Venn Pie图
venn.diagram(
x = x,
filename = NULL,
col = list_col,
fill = list_col,
alpha = 0.50,
label.col = list_col,
cex = 1.5,
fontfamily = "sans",
margin = 0.05,
main = "Venn Pie Chart"
)
library(VennDiagram)
#创建一个列表，包含要显示在venn pie图中的数据
list_data <- list(
AF = data_ERR_AF$Position[data_ERR_AF$Flag == "True"],
SB = data_ERR_SB$Position[data_ERR_SB$Flag == "True"],
COV = data_ERR_COV$Position[data_ERR_COV$Flag == "True"]
)
#指定颜色
list_col <- c("red", "blue", "green")
#创建Venn Pie图
venn.diagram(
x = list_data,
filename = NULL,
col = list_col,
fill = list_col,
alpha = 0.50,
label.col = list_col,
cex = 1.5,
fontfamily = "sans",
margin = 0.05,
main = "Venn Pie Chart"
)
library(VennDiagram)
#创建一个列表，包含要显示在venn pie图中的数据
list_data <- list(
AF = data_ERR_AF$Position[data_ERR_AF$Flag == "True"],
SB = data_ERR_SB$Position[data_ERR_SB$Flag == "True"],
COV = data_ERR_COV$Position[data_ERR_COV$Flag == "True"]
)
#创建Venn Pie图
venn.diagram(
x = list_data,
filename = NULL,
alpha = 0.50,
label.col = list_col,
cex = 1.5,
fontfamily = "sans",
margin = 0.05,
main = "Venn Pie Chart"
)
library(VennDiagram)
#创建一个列表，包含要显示在venn pie图中的数据
list_data <- list(
AF = data_ERR_AF$Position[data_ERR_AF$Flag == "True"],
SB = data_ERR_SB$Position[data_ERR_SB$Flag == "True"],
COV = data_ERR_COV$Position[data_ERR_COV$Flag == "True"]
)
#指定颜色
list_col <- c("red", "blue", "green")
#创建Venn Pie图
venn.diagram(
x = list_data,
col = list_col,
fill = list_col,
alpha = 0.50,
label.col = list_col,
cex = 1.5,
fontfamily = "sans",
margin = 0.05,
main = "Venn Pie Chart"
)
library(VennDiagram)
#创建一个列表，包含要显示在venn pie图中的数据
list_data <- list(
AF = data_ERR_AF$Position[data_ERR_AF$Flag == "True"],
SB = data_ERR_SB$Position[data_ERR_SB$Flag == "True"],
COV = data_ERR_COV$Position[data_ERR_COV$Flag == "True"]
)
#指定颜色
list_col <- c("red", "blue", "green")
#创建Venn Pie图
venn.diagram(
x = list_data,
filename = NULL,
col = list_col,
fill = list_col,
alpha = 0.50,
label.col = list_col,
cex = 1.5,
fontfamily = "sans",
margin = 0.05,
main = "Venn Pie Chart"
)
A <- sample(1:100, 40, replace = FALSE)
B <- sample(1:100, 60, replace = FALSE)
C <- sample(1:100, 40, replace = FALSE)
res <- venndetail(list(A = A, B = B, C = C))
vennpie(res)
res <- venndetail(x)
vennpie(res)
vennpie(venndetail(x))
library(ggplot2)
library(ggVennDiagram)
# 创建一个包含所有数据的列表
data_list <- list(
AF = data_ERR_AF$Position[data_ERR_AF$Flag == "True"],
SB = data_ERR_SB$Position[data_ERR_SB$Flag == "True"],
COV = data_ERR_COV$Position[data_ERR_COV$Flag == "True"]
)
# 创建 Venn 图
venn_data <- process_data(Venn(data_list))
# 绘制 Venn 图
ggplot(data = venn_data) +
# 区域计数层
geom_sf(aes(fill = count)) +
# 集合边缘层
geom_sf(aes(color = name), show.legend = TRUE, size = 2) +
# 集合标签层
geom_sf_text(aes(label = name)) +
# 区域标签层
geom_sf_label(aes(label = paste0(count, " (", scales::percent(count/sum(count), accuracy = 2), ")")), size = 3) +
# 调整颜色和标尺
scale_fill_gradient(low = "#F4FAFE", high = "skyblue") +
scale_color_manual(values = c("AF" = "yellow", "SB" = "steelblue", "COV" = "red")) +
#scale_fill_distiller(palette = "RdBu") +
# 调整标签和标题大小
theme_void() +
theme(
plot.title.size = 16,
plot.subtitle.size = 14,
plot.caption.size = 12,
legend.position = "bottom",
plot.title.position = "plot",
plot.caption.position = "plot"
) +
labs(
title = "Error position's Venn Diagram",
subtitle = "blank for now",
caption = Sys.Date()
)
library(ggplot2)
library(ggVennDiagram)
x <- list(
AF = data_ERR_AF$Position[data_ERR_AF$Flag == "True"],
SB = data_ERR_SB$Position[data_ERR_SB$Flag == "True"],
COV = data_ERR_COV$Position[data_ERR_COV$Flag == "True"]
)
ggplot(process_data(Venn(x))) +
# 1. region count layer
geom_sf(aes(fill = count), data = venn_region(data)) +
# 2. set edge layer
geom_sf(aes(color = name), data = venn_setedge(data), show.legend = TRUE, size = 2) +
# 3. set label layer
geom_sf_text(aes(label = name), data = venn_setlabel(data)) +
# 4. region label layer
geom_sf_label(aes(label = paste0(count, " (", scales::percent(count/sum(count), accuracy = 2), ")")),
data = venn_region(data),
size = 3) +
scale_fill_gradient(low = "#F4FAFE", high = "skyblue")+
scale_color_manual(values = c("AF" = "yellow","SB" ="steelblue",'COV' = 'red'))+
# scale_fill_distiller(palette = "RdBu")+
theme_void()+
labs(title = "Error position's Venn Diagram",
subtitle = "blank for now",
caption = Sys.Date())
library(ggplot2)
library(ggVennDiagram)
x <- list(
AF = data_ERR_AF$Position[data_ERR_AF$Flag == "True"],
SB = data_ERR_SB$Position[data_ERR_SB$Flag == "True"],
COV = data_ERR_COV$Position[data_ERR_COV$Flag == "True"]
)
venn <- Venn(x)
data <- process_data(venn)
ggplot() +
# 1. region count layer
geom_sf(aes(fill = count), data = venn_region(data)) +
# 2. set edge layer
geom_sf(aes(color = name), data = venn_setedge(data), show.legend = TRUE, size = 2) +
# 3. set label layer
geom_sf_text(aes(label = name), data = venn_setlabel(data)) +
# 4. region label layer
geom_sf_label(aes(label = paste0(count, " (", scales::percent(count/sum(count), accuracy = 2), ")")),
data = venn_region(data),
size = 3) +
scale_fill_gradient(low = "#F4FAFE", high = "skyblue")+
scale_color_manual(values = c("AF" = "yellow","SB" ="steelblue",'COV' = 'red'))+
# scale_fill_distiller(palette = "RdBu")+
theme_void()+
labs(title = "Error position's Venn Diagram",
subtitle = "blank for now",
caption = Sys.Date())
library(ggplot2)
library(ggVennDiagram)
x <- list(
AF = data_ERR_AF$Position[data_ERR_AF$Flag == "True"],
SB = data_ERR_SB$Position[data_ERR_SB$Flag == "True"],
COV = data_ERR_COV$Position[data_ERR_COV$Flag == "True"]
)
venn <- Venn(x)
ggplot(data = process_data(venn)) +
# 1. region count layer
geom_sf(aes(fill = count), data = venn_region(data)) +
# 2. set edge layer
geom_sf(aes(color = name), data = venn_setedge(data), show.legend = TRUE, size = 2) +
# 3. set label layer
geom_sf_text(aes(label = name), data = venn_setlabel(data)) +
# 4. region label layer
geom_sf_label(aes(label = paste0(count, " (", scales::percent(count/sum(count), accuracy = 2), ")")),
data = venn_region(data),
size = 3) +
scale_fill_gradient(low = "#F4FAFE", high = "skyblue")+
scale_color_manual(values = c("AF" = "yellow","SB" ="steelblue",'COV' = 'red'))+
# scale_fill_distiller(palette = "RdBu")+
theme_void()+
labs(title = "Error position's Venn Diagram",
subtitle = "blank for now",
caption = Sys.Date())
library(ggplot2)
library(ggVennDiagram)
x <- list(
AF = data_ERR_AF$Position[data_ERR_AF$Flag == "True"],
SB = data_ERR_SB$Position[data_ERR_SB$Flag == "True"],
COV = data_ERR_COV$Position[data_ERR_COV$Flag == "True"]
)
venn <- Venn(x)
data <- process_data(venn)
ggplot() +
# 1. region count layer
geom_sf(aes(fill = count), data = venn_region(data)) +
# 2. set edge layer
geom_sf(aes(color = name), data = venn_setedge(data), show.legend = TRUE, size = 2) +
# 3. set label layer
geom_sf_text(aes(label = name), data = venn_setlabel(data)) +
# 4. region label layer
geom_sf_label(aes(label = paste0(count, " (", scales::percent(count/sum(count), accuracy = 2), ")")),
data = venn_region(data),
size = 3) +
scale_fill_gradient(low = "#F4FAFE", high = "skyblue")+
scale_color_manual(values = c("AF" = "yellow","SB" ="steelblue",'COV' = 'red'))+
# scale_fill_distiller(palette = "RdBu")+
theme_void()+
labs(title = "Error position's Venn Diagram",
subtitle = "blank for now",
caption = Sys.Date())
library(ggplot2)
library(ggVennDiagram)
x <- list(
AF = data_ERR_AF$Position[data_ERR_AF$Flag == "True"],
SB = data_ERR_SB$Position[data_ERR_SB$Flag == "True"],
COV = data_ERR_COV$Position[data_ERR_COV$Flag == "True"]
)
data <- process_data(Venn(x))
ggplot() +
# 1. region count layer
geom_sf(aes(fill = count), data = venn_region(data)) +
# 2. set edge layer
geom_sf(aes(color = name), data = venn_setedge(data), show.legend = TRUE, size = 2) +
# 3. set label layer
geom_sf_text(aes(label = name), data = venn_setlabel(data)) +
# 4. region label layer
geom_sf_label(aes(label = paste0(count, " (", scales::percent(count/sum(count), accuracy = 2), ")")),
data = venn_region(data),
size = 3) +
scale_fill_gradient(low = "#F4FAFE", high = "skyblue")+
scale_color_manual(values = c("AF" = "yellow","SB" ="steelblue",'COV' = 'red'))+
# scale_fill_distiller(palette = "RdBu")+
theme_void()+
labs(title = "Error position's Venn Diagram",
subtitle = "blank for now",
caption = Sys.Date())
data
fromList(x)
library(UpSetR)
# 创建一个包含所有数据的列表
upset_data <- list(
AF = data_ERR_AF$Position[data_ERR_AF$Flag == "True"],
SB = data_ERR_SB$Position[data_ERR_SB$Flag == "True"],
COV = data_ERR_COV$Position[data_ERR_COV$Flag == "True"]
)
# 绘制交互图
upset(fromList(upset_data),
# 设置颜色和排序方式
sets.bar.color = "#56B4E9",
order.by = "freq",
empty.intersections = "on",
set_size.show = T,
sets.x.label = "Set Size",
mainbar.y.label = "Intersection Size",
mb.ratio = c(0.55, 0.45)) +
# 设置主标题和轴标题
ggtitle("Error position's UpSet Plot") +
labs(x = NULL, y = NULL) +
# 调整标题和轴标题大小
theme(
plot.title.size = 16,
axis.title.size = 14
) +
# 调整交互图的外观
theme_upset(
fill = c("#56B4E9", "#E69F00", "#009E73"),
text.color = "black",
border.width = 0.5,
point.size = 2.5,
set_size.line.height = 0.5
)
library(UpSetR)
# 创建一个包含所有数据的列表
upset_data <- list(
AF = data_ERR_AF$Position[data_ERR_AF$Flag == "True"],
SB = data_ERR_SB$Position[data_ERR_SB$Flag == "True"],
COV = data_ERR_COV$Position[data_ERR_COV$Flag == "True"]
)
# 绘制交互图
upset(fromList(upset_data),
# 设置颜色和排序方式
order.by = "freq",
empty.intersections = "on",
set_size.show = T,
sets.x.label = "Set Size",
mainbar.y.label = "Intersection Size",
mb.ratio = c(0.55, 0.45)) +
# 设置主标题和轴标题
ggtitle("Error position's UpSet Plot") +
labs(x = NULL, y = NULL) +
# 调整标题和轴标题大小
theme(
plot.title.size = 16,
axis.title.size = 14
) +
# 调整交互图的外观
theme_upset(
fill = c("#56B4E9", "#E69F00", "#009E73"),
text.color = "black",
border.width = 0.5,
point.size = 2.5,
set_size.line.height = 0.5
)
library(UpSetR)
x <- list(
AF = data_ERR_AF$Position[data_ERR_AF$Flag == "True"],
SB = data_ERR_SB$Position[data_ERR_SB$Flag == "True"],
COV = data_ERR_COV$Position[data_ERR_COV$Flag == "True"]
)
upset(fromList(x),sets.bar.color = "#56B4E9",order.by = "freq", empty.intersections = "on",
set_size.show = T,
sets.x.label = "Set Size",
mainbar.y.label = "Intersection Size",
mb.ratio = c(0.55, 0.45)
)
library(UpSetR)
x <- list(
AF = data_ERR_AF$Position[data_ERR_AF$Flag == "True"],
SB = data_ERR_SB$Position[data_ERR_SB$Flag == "True"],
COV = data_ERR_COV$Position[data_ERR_COV$Flag == "True"]
)
upset(fromList(x), sets.bar.color = "#56B4E9",order.by = "freq", empty.intersections = "on",
set_size.show = T,
sets.x.label = "Set Size",
mainbar.y.label = "Intersection Size",
mb.ratio = c(0.55, 0.45)
)+
ggtitle("Error position's UpSet Plot") +
labs(x = NULL, y = NULL)
library(UpSetR)
x <- list(
AF = data_ERR_AF$Position[data_ERR_AF$Flag == "True"],
SB = data_ERR_SB$Position[data_ERR_SB$Flag == "True"],
COV = data_ERR_COV$Position[data_ERR_COV$Flag == "True"]
)
upset(fromList(x), sets.bar.color = "#56B4E9",order.by = "freq", empty.intersections = "on",
set_size.show = T,
sets.x.label = "Set Size",
mainbar.y.label = "Intersection Size",
mb.ratio = c(0.55, 0.45)
)
library(UpSetR)
x <- list(
AF = data_ERR_AF$Position[data_ERR_AF$Flag == "True"],
SB = data_ERR_SB$Position[data_ERR_SB$Flag == "True"],
COV = data_ERR_COV$Position[data_ERR_COV$Flag == "True"]
)
upset(fromList(x), sets.bar.color = "#56B4E9",
order.by = "freq", empty.intersections = "on",
set_size.show = T,
sets.x.label = "Set Size",
mainbar.y.label = "Intersection Size",
mb.ratio = c(0.55, 0.45)
)
library(ggplot2)
library(ggVennDiagram)
x <- list(
AF = data_ERR_AF$Position[data_ERR_AF$Flag == "True"],
SB = data_ERR_SB$Position[data_ERR_SB$Flag == "True"],
COV = data_ERR_COV$Position[data_ERR_COV$Flag == "True"]
)
data <- process_data(Venn(x))
ggplot() +
# 1. region count layer
geom_sf(aes(fill = count), data = venn_region(data)) +
# 2. set edge layer
geom_sf(aes(color = name), data = venn_setedge(data), show.legend = TRUE, size = 2) +
# 3. set label layer
geom_sf_text(aes(label = name), data = venn_setlabel(data)) +
# 4. region label layer
geom_sf_label(aes(label = paste0(count, " (", scales::percent(count/sum(count), accuracy = 2), ")")),
data = venn_region(data),
size = 3) +
scale_fill_gradient(low = "#F4FAFE", high = "skyblue")+
scale_color_manual(values = c("AF" = "pink","SB" ="steelblue",'COV' = 'red'))+
# scale_fill_distiller(palette = "RdBu")+
theme_void()+
labs(title = "Error position's Venn Diagram",
subtitle = "blank for now",
caption = Sys.Date())
library(ggplot2)
library(ggVennDiagram)
x <- list(
AF = data_ERR_AF$Position[data_ERR_AF$Flag == "True"],
SB = data_ERR_SB$Position[data_ERR_SB$Flag == "True"],
COV = data_ERR_COV$Position[data_ERR_COV$Flag == "True"]
)
data <- process_data(Venn(x))
ggplot() +
# 1. region count layer
geom_sf(aes(fill = count), data = venn_region(data)) +
# 2. set edge layer
geom_sf(aes(color = name), data = venn_setedge(data), show.legend = TRUE, size = 2) +
# 3. set label layer
geom_sf_text(aes(label = name), data = venn_setlabel(data)) +
# 4. region label layer
geom_sf_label(aes(label = paste0(count, " (", scales::percent(count/sum(count), accuracy = 2), ")")),
data = venn_region(data),
size = 3) +
scale_fill_gradient(low = "#F4FAFE", high = "skyblue")+
scale_color_manual(values = c("AF" = "orange","SB" ="steelblue",'COV' = 'red'))+
# scale_fill_distiller(palette = "RdBu")+
theme_void()+
labs(title = "Error position's Venn Diagram",
subtitle = "blank for now",
caption = Sys.Date())
venn <- venndetail(x)
plot(venn)
venn <- venndetail(x)
venn
plot(venn)
plot(venn, type = "vennpie")
plot(venn, type = "upset")
