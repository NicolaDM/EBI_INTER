#annotate(geom = 'text', label = paste0(data_ERR_F_count, " (", round(data_ERR_F_count/nrow(data_ERR)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -0.8, vjust = 1, size = 5)
# 2.All positions (Passed the threshold)
p2 <- ggplot() +
geom_sf(aes(fill = count), data = venn_region(data_all)) +
geom_sf(aes(color = name), data = venn_setedge(data_all), show.legend = FALSE, size = 2) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_all)) +
geom_sf_label(aes(label = paste0(count, " (", round(count/nrow(data_ALL)*100, 3), "%)")),
data = venn_region(data_all),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "All positions (Passed the threshold)")+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#6FBEF7"))#+
#annotate(geom = 'text', label = paste0(data_ALL_F_count, " (", round(data_ALL_F_count/nrow(data_ALL)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -0.6, vjust = 1, size = 5)
# 3.Error positions (Unpassed the threshold)
p3 <- ggplot() +
geom_sf(aes(fill = count), data = venn_region(data_err_F)) +
geom_sf(aes(color = name), data = venn_setedge(data_err_F), show.legend = FALSE, size = 10) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_err_F)) +
geom_sf_label(aes(label = paste0(count, " (", round(count/nrow(data_ERR)*100, 3), "%)")),
data = venn_region(data_err_F),
size = 10) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "Error positions (Unpassed the threshold)")+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#EBF6FD"))#+
#annotate(geom = 'text', label = paste0(data_ERR_count, " (", round(data_ERR_count/nrow(data_ERR)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -0.7, vjust = 1, size = 5)
# 4.All positions (Unpassed the threshold)
p4 <- ggplot() +
geom_sf(aes(fill = count), data = venn_region(data_all_F)) +
geom_sf(aes(color = name), data = venn_setedge(data_all_F), show.legend = FALSE, size = 2) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_all_F)) +
geom_sf_label(aes(label = paste0(count, " (", round(count/nrow(data_ALL)*100, 3), "%)")),
data = venn_region(data_all_F),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "All positions (Unpassed the threshold)")+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#F4FAFE"))#+
#annotate(geom = 'text', label = paste0(data_ALL_count, " (", round(data_ALL_count/nrow(data_ALL)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1, vjust = 1, size = 5)
title <- ggdraw() + draw_label("Venn diagram of the indicator comparison")
combined_plot <- plot_grid(p1, p2, p3, p4, nrow = 2, ncol = 2)
legend <- cowplot::get_legend(
ggplot() +
geom_sf(aes(color = name), data = venn_setedge(data_all), show.legend = TRUE, size = 2) +
scale_color_manual(values = manual_colors) +
theme_void() +
labs(color = "Category") +
theme(legend.direction = "horizontal")
)
# Combine graphics and legends
final_plot <- plot_grid(
title,
combined_plot,
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
# Run the command below in the terminal to display it in the drawing window
final_plot
final_plot
manual_colors <- c("AF" = "orange", "SB" = "steelblue", "COV" = "red")
# 1.Error positions (Passed the threshold)
p1 <- ggplot() +
geom_sf(aes(fill = count), data = venn_region(data_err)) +
geom_sf(aes(color = name), data = venn_setedge(data_err), show.legend = FALSE, size = 10) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_err)) +
geom_sf_label(aes(label = paste0(count, " (", round(count/nrow(data_ERR)*100, 3), "%)")),
data = venn_region(data_err),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "Error positions (Passed the threshold)")+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#EBF6FD"))#+
#annotate(geom = 'text', label = paste0(data_ERR_F_count, " (", round(data_ERR_F_count/nrow(data_ERR)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -0.8, vjust = 1, size = 5)
# 2.All positions (Passed the threshold)
p2 <- ggplot() +
geom_sf(aes(fill = count), data = venn_region(data_all)) +
geom_sf(aes(color = name), data = venn_setedge(data_all), show.legend = FALSE, size = 2) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_all)) +
geom_sf_label(aes(label = paste0(count, " (", round(count/nrow(data_ALL)*100, 3), "%)")),
data = venn_region(data_all),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "All positions (Passed the threshold)")+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#6FBEF7"))#+
#annotate(geom = 'text', label = paste0(data_ALL_F_count, " (", round(data_ALL_F_count/nrow(data_ALL)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -0.6, vjust = 1, size = 5)
# 3.Error positions (Unpassed the threshold)
p3 <- ggplot() +
geom_sf(aes(fill = count), data = venn_region(data_err_F)) +
geom_sf(aes(color = name), data = venn_setedge(data_err_F), show.legend = FALSE, size = 2) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_err_F)) +
geom_sf_label(aes(label = paste0(count, " (", round(count/nrow(data_ERR)*100, 3), "%)")),
data = venn_region(data_err_F),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "Error positions (Unpassed the threshold)")+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#EBF6FD"))#+
#annotate(geom = 'text', label = paste0(data_ERR_count, " (", round(data_ERR_count/nrow(data_ERR)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -0.7, vjust = 1, size = 5)
# 4.All positions (Unpassed the threshold)
p4 <- ggplot() +
geom_sf(aes(fill = count), data = venn_region(data_all_F)) +
geom_sf(aes(color = name), data = venn_setedge(data_all_F), show.legend = FALSE, size = 2) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_all_F)) +
geom_sf_label(aes(label = paste0(count, " (", round(count/nrow(data_ALL)*100, 3), "%)")),
data = venn_region(data_all_F),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "All positions (Unpassed the threshold)")+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#F4FAFE"))#+
#annotate(geom = 'text', label = paste0(data_ALL_count, " (", round(data_ALL_count/nrow(data_ALL)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1, vjust = 1, size = 5)
title <- ggdraw() + draw_label("Venn diagram of the indicator comparison")
combined_plot <- plot_grid(p1, p2, p3, p4, nrow = 2, ncol = 2)
legend <- cowplot::get_legend(
ggplot() +
geom_sf(aes(color = name), data = venn_setedge(data_all), show.legend = TRUE, size = 2) +
scale_color_manual(values = manual_colors) +
theme_void() +
labs(color = "Category") +
theme(legend.direction = "horizontal")
)
# Combine graphics and legends
final_plot <- plot_grid(
title,
combined_plot,
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
# Run the command below in the terminal to display it in the drawing window
final_plot
final_plot
manual_colors <- c("AF" = "orange", "SB" = "steelblue", "COV" = "red")
# 1.Error positions (Passed the threshold)
p1 <- ggplot() +
geom_sf(aes(fill = count), data = venn_region(data_err)) +
geom_sf(aes(color = name), data = venn_setedge(data_err), show.legend = FALSE, size = 2) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_err)) +
geom_sf_label(aes(label = paste0(count, " (", round(count/nrow(data_ERR)*100, 3), "%)")),
data = venn_region(data_err),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "Error positions (Passed the threshold)")+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#EBF6FD"))#+
#annotate(geom = 'text', label = paste0(data_ERR_F_count, " (", round(data_ERR_F_count/nrow(data_ERR)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -0.8, vjust = 1, size = 5)
# 2.All positions (Passed the threshold)
p2 <- ggplot() +
geom_sf(aes(fill = count), data = venn_region(data_all)) +
geom_sf(aes(color = name), data = venn_setedge(data_all), show.legend = FALSE, size = 2) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_all)) +
geom_sf_label(aes(label = paste0(count, " (", round(count/nrow(data_ALL)*100, 3), "%)")),
data = venn_region(data_all),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "All positions (Passed the threshold)")+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#6FBEF7"))#+
#annotate(geom = 'text', label = paste0(data_ALL_F_count, " (", round(data_ALL_F_count/nrow(data_ALL)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -0.6, vjust = 1, size = 5)
# 3.Error positions (Unpassed the threshold)
p3 <- ggplot() +
geom_sf(aes(fill = count), data = venn_region(data_err_F)) +
geom_sf(aes(color = name), data = venn_setedge(data_err_F), show.legend = FALSE, size = 2) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_err_F)) +
geom_sf_label(aes(label = paste0(count, " (", round(count/nrow(data_ERR)*100, 3), "%)")),
data = venn_region(data_err_F),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "Error positions (Unpassed the threshold)")+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#EBF6FD"))#+
#annotate(geom = 'text', label = paste0(data_ERR_count, " (", round(data_ERR_count/nrow(data_ERR)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -0.7, vjust = 1, size = 5)
# 4.All positions (Unpassed the threshold)
p4 <- ggplot() +
geom_sf(aes(fill = count), data = venn_region(data_all_F)) +
geom_sf(aes(color = name), data = venn_setedge(data_all_F), show.legend = FALSE, size = 2) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_all_F)) +
geom_sf_label(aes(label = paste0(count, " (", round(count/nrow(data_ALL)*100, 3), "%)")),
data = venn_region(data_all_F),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "All positions (Unpassed the threshold)")+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#F4FAFE"))#+
#annotate(geom = 'text', label = paste0(data_ALL_count, " (", round(data_ALL_count/nrow(data_ALL)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1, vjust = 1, size = 5)
title <- ggdraw() + draw_label("Venn diagram of the indicator comparison")
combined_plot <- plot_grid(p1, p2, p3, p4, nrow = 2, ncol = 2)
legend <- cowplot::get_legend(
ggplot() +
geom_sf(aes(color = name), data = venn_setedge(data_all), show.legend = TRUE, size = 2) +
scale_color_manual(values = manual_colors) +
theme_void() +
labs(color = "Category") +
theme(legend.direction = "horizontal")
)
# Combine graphics and legends
final_plot <- plot_grid(
title,
combined_plot,
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
# Run the command below in the terminal to display it in the drawing window
final_plot
final_plot
format_count <- function(count) {
result <- ifelse(count >= 1e9, paste0(round(count / 1e9, 2), "B"),
ifelse(count >= 1e6, paste0(round(count / 1e6, 2), "M"),
ifelse(count >= 1e3, paste0(round(count / 1e3, 2), "K"),
as.character(count))))
return(result)
}
data_err <- process_data(Venn(x_ERR))
data_all <- process_data(Venn(x_ALL))
data_err_F <- process_data(Venn(x_ERR_F))
data_all_F <- process_data(Venn(x_ALL_F))
data_ALL$Flag_AF <- as.logical(data_ALL$Flag_AF)
data_ALL$Flag_SB <- as.logical(data_ALL$Flag_SB)
data_ALL$Flag_COV <- as.logical(data_ALL$Flag_COV)
data_ERR$Flag_AF <- as.logical(data_ERR$Flag_AF)
data_ERR$Flag_SB <- as.logical(data_ERR$Flag_SB)
data_ERR$Flag_COV <- as.logical(data_ERR$Flag_COV)
data_ERR_F_count <- sum(!data_ERR$Flag_AF & !data_ERR$Flag_SB & !data_ERR$Flag_COV)
data_ALL_F_count <- sum(!data_ALL$Flag_AF & !data_ALL$Flag_SB & !data_ALL$Flag_COV)
data_ERR_count <- sum(data_ERR$Flag_AF & data_ERR$Flag_SB & data_ERR$Flag_COV)
data_ALL_count <- sum(data_ALL$Flag_AF & data_ALL$Flag_SB & data_ALL$Flag_COV)
manual_colors <- c("AF" = "orange", "SB" = "steelblue", "COV" = "red")
# 1.Error positions (Passed the threshold)
p1 <- ggplot() +
geom_sf(aes(fill = count), data = venn_region(data_err)) +
geom_sf(aes(color = name), data = venn_setedge(data_err), show.legend = FALSE, size = 2, lwd=3) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_err)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/nrow(data_ERR)*100, 3), "%)")),
data = venn_region(data_err),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "Error positions (Passed the threshold)")+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#EBF6FD"))#+
#annotate(geom = 'text', label = paste0(data_ERR_F_count, " (", round(data_ERR_F_count/nrow(data_ERR)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -0.8, vjust = 1, size = 5)
# 2.All positions (Passed the threshold)
p2 <- ggplot() +
geom_sf(aes(fill = count), data = venn_region(data_all)) +
geom_sf(aes(color = name), data = venn_setedge(data_all), show.legend = FALSE, size = 2, lwd=3) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_all)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/nrow(data_ALL)*100, 3), "%)")),
data = venn_region(data_all),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "All positions (Passed the threshold)")+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#6FBEF7"))#+
#annotate(geom = 'text', label = paste0(data_ALL_F_count, " (", round(data_ALL_F_count/nrow(data_ALL)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -0.6, vjust = 1, size = 5)
# 3.Error positions (Unpassed the threshold)
p3 <- ggplot() +
geom_sf(aes(fill = count), data = venn_region(data_err_F)) +
geom_sf(aes(color = name), data = venn_setedge(data_err_F), show.legend = FALSE, size = 2, lwd=3) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_err_F)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/nrow(data_ERR)*100, 3), "%)")),
data = venn_region(data_err_F),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "Error positions (Unpassed the threshold)")+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#EBF6FD"))#+
#annotate(geom = 'text', label = paste0(data_ERR_count, " (", round(data_ERR_count/nrow(data_ERR)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -0.7, vjust = 1, size = 5)
# 4.All positions (Unpassed the threshold)
p4 <- ggplot() +
geom_sf(aes(fill = count), data = venn_region(data_all_F)) +
geom_sf(aes(color = name), data = venn_setedge(data_all_F), show.legend = FALSE, size = 2, lwd=3) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_all_F)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/nrow(data_ALL)*100, 3), "%)")),
data = venn_region(data_all_F),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "All positions (Unpassed the threshold)")+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#F4FAFE"))#+
#annotate(geom = 'text', label = paste0(data_ALL_count, " (", round(data_ALL_count/nrow(data_ALL)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1, vjust = 1, size = 5)
title <- ggdraw() + draw_label("Venn diagram of the indicator comparison")
combined_plot <- plot_grid(p1, p2, p3, p4, nrow = 2, ncol = 2)
legend <- cowplot::get_legend(
ggplot() +
geom_sf(aes(color = name), data = venn_setedge(data_all), show.legend = TRUE, size = 2) +
scale_color_manual(values = manual_colors) +
theme_void() +
labs(color = "Category") +
theme(legend.direction = "horizontal")
)
# Combine graphics and legends
final_plot <- plot_grid(
title,
combined_plot,
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
# Run the command below in the terminal to display it in the drawing window
final_plot
final_plot
manual_colors <- c("AF" = "orange", "SB" = "steelblue", "COV" = "red")
# 1.Error positions (Passed the threshold)
p1 <- ggplot() +
geom_sf(aes(fill = count), data = venn_region(data_err)) +
geom_sf(aes(color = name), data = venn_setedge(data_err), show.legend = FALSE, size = 2, lwd=2) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_err)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/nrow(data_ERR)*100, 3), "%)")),
data = venn_region(data_err),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "Error positions (Passed the threshold)")+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#EBF6FD"))#+
#annotate(geom = 'text', label = paste0(data_ERR_F_count, " (", round(data_ERR_F_count/nrow(data_ERR)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -0.8, vjust = 1, size = 5)
# 2.All positions (Passed the threshold)
p2 <- ggplot() +
geom_sf(aes(fill = count), data = venn_region(data_all)) +
geom_sf(aes(color = name), data = venn_setedge(data_all), show.legend = FALSE, size = 2, lwd=2) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_all)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/nrow(data_ALL)*100, 3), "%)")),
data = venn_region(data_all),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "All positions (Passed the threshold)")+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#6FBEF7"))#+
#annotate(geom = 'text', label = paste0(data_ALL_F_count, " (", round(data_ALL_F_count/nrow(data_ALL)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -0.6, vjust = 1, size = 5)
# 3.Error positions (Unpassed the threshold)
p3 <- ggplot() +
geom_sf(aes(fill = count), data = venn_region(data_err_F)) +
geom_sf(aes(color = name), data = venn_setedge(data_err_F), show.legend = FALSE, size = 2, lwd=2) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_err_F)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/nrow(data_ERR)*100, 3), "%)")),
data = venn_region(data_err_F),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "Error positions (Unpassed the threshold)")+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#EBF6FD"))#+
#annotate(geom = 'text', label = paste0(data_ERR_count, " (", round(data_ERR_count/nrow(data_ERR)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -0.7, vjust = 1, size = 5)
# 4.All positions (Unpassed the threshold)
p4 <- ggplot() +
geom_sf(aes(fill = count), data = venn_region(data_all_F)) +
geom_sf(aes(color = name), data = venn_setedge(data_all_F), show.legend = FALSE, size = 2, lwd=2) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_all_F)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/nrow(data_ALL)*100, 3), "%)")),
data = venn_region(data_all_F),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "All positions (Unpassed the threshold)")+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#F4FAFE"))#+
#annotate(geom = 'text', label = paste0(data_ALL_count, " (", round(data_ALL_count/nrow(data_ALL)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1, vjust = 1, size = 5)
title <- ggdraw() + draw_label("Venn diagram of the indicator comparison")
combined_plot <- plot_grid(p1, p2, p3, p4, nrow = 2, ncol = 2)
legend <- cowplot::get_legend(
ggplot() +
geom_sf(aes(color = name), data = venn_setedge(data_all), show.legend = TRUE, size = 2) +
scale_color_manual(values = manual_colors) +
theme_void() +
labs(color = "Category") +
theme(legend.direction = "horizontal")
)
# Combine graphics and legends
final_plot <- plot_grid(
title,
combined_plot,
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
# Run the command below in the terminal to display it in the drawing window
final_plot
final_plot
manual_colors <- c("AF" = "orange", "SB" = "steelblue", "COV" = "red")
# 1.Error positions (Passed the threshold)
p1 <- ggplot() +
geom_sf(aes(fill = count), data = venn_region(data_err)) +
geom_sf(aes(color = name), data = venn_setedge(data_err), show.legend = FALSE, size = 2, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_err)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/nrow(data_ERR)*100, 3), "%)")),
data = venn_region(data_err),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "Error positions (Passed the threshold)")+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#EBF6FD"))#+
#annotate(geom = 'text', label = paste0(data_ERR_F_count, " (", round(data_ERR_F_count/nrow(data_ERR)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -0.8, vjust = 1, size = 5)
# 2.All positions (Passed the threshold)
p2 <- ggplot() +
geom_sf(aes(fill = count), data = venn_region(data_all)) +
geom_sf(aes(color = name), data = venn_setedge(data_all), show.legend = FALSE, size = 2, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_all)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/nrow(data_ALL)*100, 3), "%)")),
data = venn_region(data_all),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "All positions (Passed the threshold)")+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#6FBEF7"))#+
#annotate(geom = 'text', label = paste0(data_ALL_F_count, " (", round(data_ALL_F_count/nrow(data_ALL)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -0.6, vjust = 1, size = 5)
# 3.Error positions (Unpassed the threshold)
p3 <- ggplot() +
geom_sf(aes(fill = count), data = venn_region(data_err_F)) +
geom_sf(aes(color = name), data = venn_setedge(data_err_F), show.legend = FALSE, size = 2, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_err_F)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/nrow(data_ERR)*100, 3), "%)")),
data = venn_region(data_err_F),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "Error positions (Unpassed the threshold)")+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#EBF6FD"))#+
#annotate(geom = 'text', label = paste0(data_ERR_count, " (", round(data_ERR_count/nrow(data_ERR)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -0.7, vjust = 1, size = 5)
# 4.All positions (Unpassed the threshold)
p4 <- ggplot() +
geom_sf(aes(fill = count), data = venn_region(data_all_F)) +
geom_sf(aes(color = name), data = venn_setedge(data_all_F), show.legend = FALSE, size = 2, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(data_all_F)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/nrow(data_ALL)*100, 3), "%)")),
data = venn_region(data_all_F),
size = 3) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#B5E1F7","#ACDEF6","#A3DBF5","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#5CB6F6","#499DF5"),
values = c(0, 0.02, 0.04, 0.06, 0.08, 0.15, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0, 280000), guide = "none")+
scale_color_manual(values = manual_colors)+
labs(title = "All positions (Unpassed the threshold)")+
theme(panel.border = element_rect(colour = "grey", fill=NA, size=1),
panel.background = element_rect(fill = "#F4FAFE"))#+
#annotate(geom = 'text', label = paste0(data_ALL_count, " (", round(data_ALL_count/nrow(data_ALL)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1, vjust = 1, size = 5)
title <- ggdraw() + draw_label("Venn diagram of the indicator comparison")
combined_plot <- plot_grid(p1, p2, p3, p4, nrow = 2, ncol = 2)
legend <- cowplot::get_legend(
ggplot() +
geom_sf(aes(color = name), data = venn_setedge(data_all), show.legend = TRUE, size = 2) +
scale_color_manual(values = manual_colors) +
theme_void() +
labs(color = "Category") +
theme(legend.direction = "horizontal")
)
# Combine graphics and legends
final_plot <- plot_grid(
title,
combined_plot,
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
# Run the command below in the terminal to display it in the drawing window
final_plot
final_plot
format_count(258678)
format_count(7579)
