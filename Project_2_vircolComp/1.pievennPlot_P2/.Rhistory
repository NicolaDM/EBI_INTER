print(final_plot)
print(final_plot)
# 自定义颜色
manual_colors <- c("AF" = "#6488AE", "SB" =  "#D9BFCB", "COV" = "#A3AC5D")
# 创建标题
title <- ggdraw() + draw_label("Different nucleotide")
# 创建共享图例
legend <- cowplot::get_legend(
ggplot() +
geom_sf(aes(color = name), data = venn_setedge(Err_diff), show.legend = TRUE, size = 10, lwd = 1.5) +
scale_color_manual(values = manual_colors) +
theme_void() +
labs(color = "Category") +
theme(legend.direction = "horizontal")
)
# 绘制图形并将图形和图例组合在一起
final_plot <- plot_grid(
title,
ggplot() +
geom_sf(aes(fill = round(count/(total_sum+data_ERR_count_F)*100, 3)), data = venn_region(Err_diff)) +
geom_sf(aes(color = name), data = venn_setedge(Err_diff), show.legend = FALSE, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(Err_diff)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/(total_sum+data_ERR_count_F)*100, 3), "%)")),
data = venn_region(Err_diff),
size = 5) +  theme_void()+
scale_fill_gradientn(colors = c('#FFFFFF',
'#E8F4F2',
'#D1E9E4',
'#BADED7',
'#A3D3CB',
'#8CB9BE',
'#75AEB2',
'#5E94A5',
'#478A99',
'#49998B'),
values = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9), limits = c(0, 100), guide = "none")+
scale_color_manual(values = manual_colors)+
theme(panel.border = element_rect(colour = "white", fill=NA, size=1.5),   # 给图加一个边框
panel.background = element_rect(fill = '#8CB9BE')),#6
#annotate(geom = 'text', label = paste0(format_count(data_ERR_count_F), " (", round(data_ERR_count_F/(total_sum+data_ERR_count_F)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1.2, vjust = 1.5, size = 5),
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
# 显示最终的图形
print(final_plot)
print(final_plot)
data_ERR_masked$Flag_AF <- as.logical(data_ERR_masked$Flag_AF)
data_ERR_masked$Flag_SB <- as.logical(data_ERR_masked$Flag_SB)
data_ERR_masked$Flag_COV <- as.logical(data_ERR_masked$Flag_COV)
data_ERR_count_F <- sum(!data_ERR_masked$Flag_AF & !data_ERR_masked$Flag_SB & !data_ERR_masked$Flag_COV)
total_sum <- sum(Err_masked@region[["count"]])
# 自定义颜色
# manual_colors <- c("AF" = '#FFA500', "SB" = '#FF69B4', "COV" = "#A3AC5D")
# 创建标题
title <- ggdraw() + draw_label("Viridian assembly masked")
# 创建共享图例
legend <- cowplot::get_legend(
ggplot() +
geom_sf(aes(color = name), data = venn_setedge(Err_masked), show.legend = TRUE, size = 10, lwd = 1.5) +
scale_color_manual(values = manual_colors) +
theme_void() +
labs(color = "Category") +
theme(legend.direction = "horizontal")
)
# 绘制图形并将图形和图例组合在一起
final_plot <- plot_grid(
title,
ggplot() +
geom_sf(aes(fill = round(count/(total_sum+data_ERR_count_F)*100, 3)), data = venn_region(Err_masked)) +
geom_sf(aes(color = name), data = venn_setedge(Err_masked), show.legend = FALSE, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(Err_masked)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/(total_sum+data_ERR_count_F)*100, 3), "%)")),
data = venn_region(Err_masked),
size = 5) +  theme_void()+
scale_fill_gradientn(colors = c('#FDFDFD',
'#F8F3FF',
'#F2E9FF',
'#EDE4F6',
'#E5D8F1',
'#DCCBEA',
'#D7C6E5',
'#C5B5DD',
'#BDADE2',
'#C1BEE3'),
values = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9), limits = c(0, 100), guide = "none")+
scale_color_manual(values = manual_colors)+
theme(panel.border = element_rect(colour = "white", fill=NA, size=1.5),   # 给图加一个边框
panel.background = element_rect(fill = '#F2E9FF')),#3
#annotate(geom = 'text', label = paste0(format_count(data_ERR_count_F), " (", round(data_ERR_count_F/(total_sum+data_ERR_count_F)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1.2, vjust = 1.5, size = 5),
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
# 显示最终的图形
print(final_plot)
print(final_plot)
data_ERR_masked$Flag_AF <- as.logical(data_ERR_masked$Flag_AF)
data_ERR_masked$Flag_SB <- as.logical(data_ERR_masked$Flag_SB)
data_ERR_masked$Flag_COV <- as.logical(data_ERR_masked$Flag_COV)
data_ERR_count_F <- sum(!data_ERR_masked$Flag_AF & !data_ERR_masked$Flag_SB & !data_ERR_masked$Flag_COV)
total_sum <- sum(Err_masked@region[["count"]])
# 自定义颜色
# manual_colors <- c("AF" = '#FFA500', "SB" = '#FF69B4', "COV" = "#A3AC5D")
# 创建标题
title <- ggdraw() + draw_label("Viridian assembly masked")
# 创建共享图例
legend <- cowplot::get_legend(
ggplot() +
geom_sf(aes(color = name), data = venn_setedge(Err_masked), show.legend = TRUE, size = 10, lwd = 1.5) +
scale_color_manual(values = manual_colors) +
theme_void() +
labs(color = "Category") +
theme(legend.direction = "horizontal")
)
# 绘制图形并将图形和图例组合在一起
final_plot <- plot_grid(
title,
ggplot() +
geom_sf(aes(fill = round(count/(total_sum+data_ERR_count_F)*100, 3)), data = venn_region(Err_masked)) +
geom_sf(aes(color = name), data = venn_setedge(Err_masked), show.legend = FALSE, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(Err_masked)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/(total_sum+data_ERR_count_F)*100, 3), "%)")),
data = venn_region(Err_masked),
size = 5) +  theme_void()+
scale_fill_gradientn(colors = c('#FDFDFD',
'#F8F3FF',
'#F2E9FF',
'#EDE4F6',
'#E5D8F1',
'#DCCBEA',
'#D7C6E5',
'#C5B5DD',
'#BDADE2',
'#C1BEE3'),
values = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9), limits = c(0, 100), guide = "none")+
scale_color_manual(values = manual_colors)+
theme(panel.border = element_rect(colour = "white", fill=NA, size=1.5),   # 给图加一个边框
panel.background = element_rect(fill = '#F2E9FF')),#3
#annotate(geom = 'text', label = paste0(format_count(data_ERR_count_F), " (", round(data_ERR_count_F/(total_sum+data_ERR_count_F)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1.2, vjust = 1.5, size = 5),
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
# 显示最终的图形
print(final_plot)
print(final_plot)
data_ERR_same <- read.table("../../A_Datas/For_COMP/COMP_ERR_same.txt", header = TRUE, sep = "\t")
data_ERR_diff <- read.table("../../A_Datas/For_COMP/COMP_ERR_diff.txt", header = TRUE, sep = "\t")
data_ERR_masked <- read.table("../../A_Datas/For_COMP/COMP_ERR_masked.txt", header = TRUE, sep = "\t")
transform_to_list <- function(data, flag_value) {
x_list <- list(
AF = data$ID_POS[data$Flag_AF == flag_value],
SB = data$ID_POS[data$Flag_SB == flag_value],
COV = data$ID_POS[data$Flag_COV == flag_value]
)
venn_type_data <- process_data(Venn(x_list))
return(venn_type_data)
}
# 自定义颜色
manual_colors <- c("AF" = "#6488AE", "SB" =  "#D9BFCB", "COV" = "#A3AC5D")
# 创建标题
title <- ggdraw() + draw_label("Error positions (Passed the threshold)")
# 创建共享图例
legend <- cowplot::get_legend(
ggplot() +
geom_sf(aes(color = name), data = venn_setedge(Err_same), show.legend = TRUE, size = 10, lwd = 1.5) +
scale_color_manual(values = manual_colors) +
theme_void() +
labs(color = "Category") +
theme(legend.direction = "horizontal")
)
# 绘制图形并将图形和图例组合在一起
final_plot <- plot_grid(
title,
ggplot() +
geom_sf(aes(fill = round(count/(total_sum+data_ERR_count_F)*100, 3)), data = venn_region(Err_same)) +
geom_sf(aes(color = name), data = venn_setedge(Err_same), show.legend = FALSE, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(Err_same)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/(total_sum+data_ERR_count_F)*100, 3), "%)")),
data = venn_region(Err_same),
size = 5) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#ACDEF6","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#499DF5"),
values = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9), limits = c(0, 100), guide = "none")+
scale_color_manual(values = manual_colors)+
theme(panel.border = element_rect(colour = "white", fill=NA, size=1.5),   # 给图加一个边框
panel.background = element_rect(fill = "#F4FAFE")),#1
#annotate(geom = 'text', label = paste0(format_count(data_ERR_count_F), " (", round(data_ERR_count_F/(total_sum+data_ERR_count_F)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1.2, vjust = 1.5, size = 5),
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
# 显示最终的图形
print(final_plot)
data_ERR_same <- read.table("../../A_Datas/For_COMP/COMP_ERR_same.txt", header = TRUE, sep = "\t")
data_ERR_diff <- read.table("../../A_Datas/For_COMP/COMP_ERR_diff.txt", header = TRUE, sep = "\t")
data_ERR_masked <- read.table("../../A_Datas/For_COMP/COMP_ERR_masked.txt", header = TRUE, sep = "\t")
transform_to_list <- function(data, flag_value) {
x_list <- list(
AF = data$ID_POS[data$Flag_AF == flag_value],
SB = data$ID_POS[data$Flag_SB == flag_value],
COV = data$ID_POS[data$Flag_COV == flag_value]
)
venn_type_data <- process_data(Venn(x_list))
return(venn_type_data)
}
# data processing
Err_same <- transform_to_list(data_ERR_same, "True")
Err_diff <- transform_to_list(data_ERR_diff, "True")
Err_masked <- transform_to_list(data_ERR_masked, "True")
format_count <- function(count) {
result <- ifelse(count >= 1e9, paste0(round(count / 1e9, 2), "B"),
ifelse(count >= 1e6, paste0(round(count / 1e6, 2), "M"),
ifelse(count >= 1e3, paste0(round(count / 1e3, 2), "K"),
as.character(count))))
return(result)
}
data_ERR_same$Flag_AF <- as.logical(data_ERR_same$Flag_AF)
data_ERR_same$Flag_SB <- as.logical(data_ERR_same$Flag_SB)
data_ERR_same$Flag_COV <- as.logical(data_ERR_same$Flag_COV)
data_ERR_count_F <- sum(!data_ERR_same$Flag_AF & !data_ERR_same$Flag_SB & !data_ERR_same$Flag_COV)
total_sum <- sum(Err_same@region[["count"]])
# 自定义颜色
manual_colors <- c("AF" = "#6488AE", "SB" =  "#D9BFCB", "COV" = "#A3AC5D")
# 创建标题
title <- ggdraw() + draw_label("Error positions (Passed the threshold)")
# 创建共享图例
legend <- cowplot::get_legend(
ggplot() +
geom_sf(aes(color = name), data = venn_setedge(Err_same), show.legend = TRUE, size = 10, lwd = 1.5) +
scale_color_manual(values = manual_colors) +
theme_void() +
labs(color = "Category") +
theme(legend.direction = "horizontal")
)
# 绘制图形并将图形和图例组合在一起
final_plot <- plot_grid(
title,
ggplot() +
geom_sf(aes(fill = round(count/(total_sum+data_ERR_count_F)*100, 3)), data = venn_region(Err_same)) +
geom_sf(aes(color = name), data = venn_setedge(Err_same), show.legend = FALSE, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(Err_same)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/(total_sum+data_ERR_count_F)*100, 3), "%)")),
data = venn_region(Err_same),
size = 5) +  theme_void()+
scale_fill_gradientn(colors = c("#F4FAFE","#EBF6FD","#E2F3FC","#D9EFFB","#ACDEF6","#9AD8F4","#91D4F3","#82C7F8","#6FBEF7","#499DF5"),
values = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9), limits = c(0, 100), guide = "none")+
scale_color_manual(values = manual_colors)+
theme(panel.border = element_rect(colour = "white", fill=NA, size=1.5),   # 给图加一个边框
panel.background = element_rect(fill = "#F4FAFE")),#1
#annotate(geom = 'text', label = paste0(format_count(data_ERR_count_F), " (", round(data_ERR_count_F/(total_sum+data_ERR_count_F)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1.2, vjust = 1.5, size = 5),
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
# 显示最终的图形
print(final_plot)
print(final_plot)
data_ERR_diff$Flag_AF <- as.logical(data_ERR_diff$Flag_AF)
data_ERR_diff$Flag_SB <- as.logical(data_ERR_diff$Flag_SB)
data_ERR_diff$Flag_COV <- as.logical(data_ERR_diff$Flag_COV)
data_ERR_count_F <- sum(!data_ERR_diff$Flag_AF & !data_ERR_diff$Flag_SB & !data_ERR_diff$Flag_COV)
total_sum <- sum(Err_diff@region[["count"]])
# 自定义颜色
manual_colors <- c("AF" = "#6488AE", "SB" =  "#D9BFCB", "COV" = "#A3AC5D")
# 创建标题
title <- ggdraw() + draw_label("Different nucleotide")
# 创建共享图例
legend <- cowplot::get_legend(
ggplot() +
geom_sf(aes(color = name), data = venn_setedge(Err_diff), show.legend = TRUE, size = 10, lwd = 1.5) +
scale_color_manual(values = manual_colors) +
theme_void() +
labs(color = "Category") +
theme(legend.direction = "horizontal")
)
# 绘制图形并将图形和图例组合在一起
final_plot <- plot_grid(
title,
ggplot() +
geom_sf(aes(fill = round(count/(total_sum+data_ERR_count_F)*100, 3)), data = venn_region(Err_diff)) +
geom_sf(aes(color = name), data = venn_setedge(Err_diff), show.legend = FALSE, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(Err_diff)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/(total_sum+data_ERR_count_F)*100, 3), "%)")),
data = venn_region(Err_diff),
size = 5) +  theme_void()+
scale_fill_gradientn(colors = c('#FFFFFF',
'#E8F4F2',
'#D1E9E4',
'#BADED7',
'#A3D3CB',
'#8CB9BE',
'#75AEB2',
'#5E94A5',
'#478A99',
'#49998B'),
values = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9), limits = c(0, 100), guide = "none")+
scale_color_manual(values = manual_colors)+
theme(panel.border = element_rect(colour = "white", fill=NA, size=1.5),   # 给图加一个边框
panel.background = element_rect(fill = '#8CB9BE')),#6
#annotate(geom = 'text', label = paste0(format_count(data_ERR_count_F), " (", round(data_ERR_count_F/(total_sum+data_ERR_count_F)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1.2, vjust = 1.5, size = 5),
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
# 显示最终的图形
print(final_plot)
print(final_plot)
# 自定义颜色
manual_colors <- c("AF" = "#6488AE", "SB" =  "#D9BFCB", "COV" = "#A3AC5D")
# 创建标题
title <- ggdraw() + draw_label("Different nucleotide")
# 创建共享图例
legend <- cowplot::get_legend(
ggplot() +
geom_sf(aes(color = name), data = venn_setedge(Err_diff), show.legend = TRUE, size = 10, lwd = 1.5) +
scale_color_manual(values = manual_colors) +
theme_void() +
labs(color = "Category") +
theme(legend.direction = "horizontal")
)
# 绘制图形并将图形和图例组合在一起
final_plot <- plot_grid(
title,
ggplot() +
geom_sf(aes(fill = round(count/(total_sum+data_ERR_count_F)*100, 3)), data = venn_region(Err_diff)) +
geom_sf(aes(color = name), data = venn_setedge(Err_diff), show.legend = FALSE, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(Err_diff)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/(total_sum+data_ERR_count_F)*100, 3), "%)")),
data = venn_region(Err_diff),
size = 5) +  theme_void()+
scale_fill_gradientn(colors = c('#FFFFFF',
'#E8F4F2',
'#D1E9E4',
'#BADED7',
'#A3D3CB',
'#8CB9BE',
'#75AEB2',
'#5E94A5',
'#478A99',
'#49998B'),
values = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9), limits = c(0, 100), guide = "none")+
scale_color_manual(values = manual_colors)+
theme(panel.border = element_rect(colour = "white", fill=NA, size=1.5),   # 给图加一个边框
panel.background = element_rect(fill = '#D1E9E4')),#6
#annotate(geom = 'text', label = paste0(format_count(data_ERR_count_F), " (", round(data_ERR_count_F/(total_sum+data_ERR_count_F)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1.2, vjust = 1.5, size = 5),
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
# 显示最终的图形
print(final_plot)
print(final_plot)
data_ERR_masked$Flag_AF <- as.logical(data_ERR_masked$Flag_AF)
data_ERR_masked$Flag_SB <- as.logical(data_ERR_masked$Flag_SB)
data_ERR_masked$Flag_COV <- as.logical(data_ERR_masked$Flag_COV)
data_ERR_count_F <- sum(!data_ERR_masked$Flag_AF & !data_ERR_masked$Flag_SB & !data_ERR_masked$Flag_COV)
total_sum <- sum(Err_masked@region[["count"]])
# 自定义颜色
# manual_colors <- c("AF" = '#FFA500', "SB" = '#FF69B4', "COV" = "#A3AC5D")
# 创建标题
title <- ggdraw() + draw_label("Viridian assembly masked")
# 创建共享图例
legend <- cowplot::get_legend(
ggplot() +
geom_sf(aes(color = name), data = venn_setedge(Err_masked), show.legend = TRUE, size = 10, lwd = 1.5) +
scale_color_manual(values = manual_colors) +
theme_void() +
labs(color = "Category") +
theme(legend.direction = "horizontal")
)
# 绘制图形并将图形和图例组合在一起
final_plot <- plot_grid(
title,
ggplot() +
geom_sf(aes(fill = round(count/(total_sum+data_ERR_count_F)*100, 3)), data = venn_region(Err_masked)) +
geom_sf(aes(color = name), data = venn_setedge(Err_masked), show.legend = FALSE, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(Err_masked)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/(total_sum+data_ERR_count_F)*100, 3), "%)")),
data = venn_region(Err_masked),
size = 5) +  theme_void()+
scale_fill_gradientn(colors = c('#FDFDFD',
'#F8F3FF',
'#F2E9FF',
'#EDE4F6',
'#E5D8F1',
'#DCCBEA',
'#D7C6E5',
'#C5B5DD',
'#BDADE2',
'#C1BEE3'),
values = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9), limits = c(0, 100), guide = "none")+
scale_color_manual(values = manual_colors)+
theme(panel.border = element_rect(colour = "white", fill=NA, size=1.5),   # 给图加一个边框
panel.background = element_rect(fill = '#F2E9FF')),#3
#annotate(geom = 'text', label = paste0(format_count(data_ERR_count_F), " (", round(data_ERR_count_F/(total_sum+data_ERR_count_F)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1.2, vjust = 1.5, size = 5),
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
# 显示最终的图形
print(final_plot)
# 自定义颜色
# manual_colors <- c("AF" = '#FFA500', "SB" = '#FF69B4', "COV" = "#A3AC5D")
# 创建标题
title <- ggdraw() + draw_label("Viridian assembly masked")
# 创建共享图例
legend <- cowplot::get_legend(
ggplot() +
geom_sf(aes(color = name), data = venn_setedge(Err_masked), show.legend = TRUE, size = 10, lwd = 1.5) +
scale_color_manual(values = manual_colors) +
theme_void() +
labs(color = "Category") +
theme(legend.direction = "horizontal")
)
# 绘制图形并将图形和图例组合在一起
final_plot <- plot_grid(
title,
ggplot() +
geom_sf(aes(fill = round(count/(total_sum+data_ERR_count_F)*100, 3)), data = venn_region(Err_masked)) +
geom_sf(aes(color = name), data = venn_setedge(Err_masked), show.legend = FALSE, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(Err_masked)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/(total_sum+data_ERR_count_F)*100, 3), "%)")),
data = venn_region(Err_masked),
size = 5) +  theme_void()+
scale_fill_gradientn(colors = c('#FDFDFD',
'#F8F3FF',
'#F2E9FF',
'#EDE4F6',
'#E5D8F1',
'#DCCBEA',
'#D7C6E5',
'#C5B5DD',
'#BDADE2',
'#C1BEE3'),
values = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9), limits = c(0, 100), guide = "none")+
scale_color_manual(values = manual_colors)+
theme(panel.border = element_rect(colour = "white", fill=NA, size=1.5),   # 给图加一个边框
panel.background = element_rect(fill = '#FDFDFD')),#3
#annotate(geom = 'text', label = paste0(format_count(data_ERR_count_F), " (", round(data_ERR_count_F/(total_sum+data_ERR_count_F)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1.2, vjust = 1.5, size = 5),
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
# 显示最终的图形
print(final_plot)
print(final_plot)
# 自定义颜色
# manual_colors <- c("AF" = '#FFA500', "SB" = '#FF69B4', "COV" = "#A3AC5D")
# 创建标题
title <- ggdraw() + draw_label("Viridian assembly masked")
# 创建共享图例
legend <- cowplot::get_legend(
ggplot() +
geom_sf(aes(color = name), data = venn_setedge(Err_masked), show.legend = TRUE, size = 10, lwd = 1.5) +
scale_color_manual(values = manual_colors) +
theme_void() +
labs(color = "Category") +
theme(legend.direction = "horizontal")
)
# 绘制图形并将图形和图例组合在一起
final_plot <- plot_grid(
title,
ggplot() +
geom_sf(aes(fill = round(count/(total_sum+data_ERR_count_F)*100, 3)), data = venn_region(Err_masked)) +
geom_sf(aes(color = name), data = venn_setedge(Err_masked), show.legend = FALSE, lwd = 1.5) +
geom_sf_text(aes(label = ifelse(name %in% c("AF", "SB", "COV"), "", name)), data = venn_setlabel(Err_masked)) +
geom_sf_label(aes(label = paste0(format_count(count), " (", round(count/(total_sum+data_ERR_count_F)*100, 3), "%)")),
data = venn_region(Err_masked),
size = 5) +  theme_void()+
scale_fill_gradientn(colors = c('#FDFDFD',
'#F8F3FF',
'#F2E9FF',
'#EDE4F6',
'#E5D8F1',
'#DCCBEA',
'#D7C6E5',
'#C5B5DD',
'#BDADE2',
'#C1BEE3'),
values = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9), limits = c(0, 100), guide = "none")+
scale_color_manual(values = manual_colors)+
theme(panel.border = element_rect(colour = "white", fill=NA, size=1.5),   # 给图加一个边框
panel.background = element_rect(fill = '#F8F3FF')),#3
#annotate(geom = 'text', label = paste0(format_count(data_ERR_count_F), " (", round(data_ERR_count_F/(total_sum+data_ERR_count_F)*100, 3), "%)"), x = -Inf, y = Inf, hjust = -1.2, vjust = 1.5, size = 5),
legend,
nrow = 3,
rel_heights = c(0.1, 1, 0.1),
align = "h",
axis = "l"
)
# 显示最终的图形
print(final_plot)
print(final_plot)
